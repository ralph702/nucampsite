[{"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"5","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"6","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"7","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"8","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"9","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"10","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"11","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"13","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"14","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/redux/reducer.js":"17"},{"size":695,"mtime":1609436775551,"results":"18","hashOfConfig":"19"},{"size":599,"mtime":1610139115294,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608591606088,"results":"21","hashOfConfig":"19"},{"size":1398,"mtime":1609571981812,"results":"22","hashOfConfig":"19"},{"size":6663,"mtime":1610223336022,"results":"23","hashOfConfig":"19"},{"size":2181,"mtime":1610152954095,"results":"24","hashOfConfig":"19"},{"size":5100,"mtime":1610095790807,"results":"25","hashOfConfig":"19"},{"size":1912,"mtime":1609567715201,"results":"26","hashOfConfig":"19"},{"size":945,"mtime":1609570312560,"results":"27","hashOfConfig":"19"},{"size":10931,"mtime":1610206943126,"results":"28","hashOfConfig":"19"},{"size":1054,"mtime":1609569165116,"results":"29","hashOfConfig":"19"},{"size":4243,"mtime":1609568973178,"results":"30","hashOfConfig":"19"},{"size":303,"mtime":1609569098682,"results":"31","hashOfConfig":"19"},{"size":1242,"mtime":1609570610265,"results":"32","hashOfConfig":"19"},{"size":4436,"mtime":1609899596623,"results":"33","hashOfConfig":"19"},{"size":224,"mtime":1610138058755,"results":"34","hashOfConfig":"19"},{"size":409,"mtime":1610138000032,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ot7p4x",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["74","75"],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["76","77","78"],"import React, { Component } from \"react\";\nimport {\n    Card,\n    CardImg,\n    CardText,\n    CardBody,\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Label,CardTitle\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n           \n            isModalOpen: false\n        };\n    } toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }  handleLogin(event) {\n        alert(`Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`);\n        this.toggleModal();\n        event.preventDefault();\n    }\n    handleSubmit(values) {\n        console.log('Current state is: ' + JSON.stringify(values));\n        alert('Current state is: ' + JSON.stringify(values));\n        \n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Button outline onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select\n                                    model=\".rating\"\n                                    id=\"rating\"\n                                    name=\"rating\"\n                                    className=\"form-control\"\n                                >\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text\n                                    model=\".author\"\n                                    id=\"author\"\n                                    name=\"author\"\n                                    placeholder=\"Your Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        \n                                        minLength: minLength(2),\n                                        maxLength: maxLength(15),\n                                    }}\n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        minLength: \"Must be at least 2 characters\",\n                                        maxLength: \"Must be 15 characters or less\",\n                                    }}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea\n                                    model=\".text\"\n                                    id=\"text\"\n                                    name=\"text\"\n                                    rows=\"6\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <Button type=\"submit\" color=\"primary\">\n                                Submit\n              </Button>\n                        </LocalForm>\n                    \n                    </ModalBody>\n                \n                </Modal>\n            </React.Fragment>\n\n\n        );\n    }\n}\n\nfunction RenderCampsite({ campsite }) {\n    return (\n        <div className=\"col-md-5 m-1\">\n            <Card>\n                <CardImg top src={campsite.image} alt={campsite.name} />\n                <CardBody>\n                    <CardTitle>{campsite.name}</CardTitle>\n                    <CardText>{campsite.description}</CardText>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\nfunction RenderComments({ comments }) {\n    console.log(comments)\n    if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                {comments.map(comment => {\n                    return (\n                        <div key={comment.id}>\n\n                            <p>{comment.text}</p>\n                            <p>{comment.author}</p>\n                            <p>{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\n\n                        </div>\n                    )\n                })}\n                <CommentForm />\n            </div>\n        );\n    }\n    return <div></div>;\n}\nfunction CampsiteInfo(props) {\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments comments={props.comments} />\n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\nexport default CampsiteInfo;\n","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["79","80","81","82","83","84","85"],"import React , {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem,  Button,  Label,  Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n    \nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n      \n       \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n \n\n   \n\n    handleSubmit(values) {\n        console.log('Current state is: ' + JSON.stringify(values));\n        alert('Current state is: ' + JSON.stringify(values));\n        \n    }\n    \n    \n    render() {\n           \n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>Contact Us</h2>\n                    <hr />\n                </div>\n            </div>\n\n            <div className=\"row row-content align-items-center\">\n                <div className=\"col-sm-4\">\n                    <h5>Our Address</h5>\n                    <address>\n                        1 Nucamp Way<br />\n                        Seattle, WA 98001<br />\n                        U.S.A.\n                    </address>\n                </div>\n                <div className=\"col\">\n                    <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                    <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                </div>\n            </div>\n\n            <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n\n                    <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n\n                                  \n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n. . .\n\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n\n        \n    \n}\n}\nexport default Contact;","/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],["86","87"],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/ralphy/Desktop/NucampFolder/3-React/nucampsite/src/redux/reducer.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":60,"column":33,"nodeType":"94","endLine":65,"endColumn":34},{"ruleId":"92","severity":1,"message":"95","line":75,"column":33,"nodeType":"94","endLine":86,"endColumn":35},{"ruleId":"92","severity":1,"message":"96","line":100,"column":33,"nodeType":"94","endLine":106,"endColumn":35},{"ruleId":"92","severity":1,"message":"95","line":92,"column":33,"nodeType":"94","endLine":100,"endColumn":39},{"ruleId":"92","severity":1,"message":"95","line":117,"column":37,"nodeType":"94","endLine":125,"endColumn":39},{"ruleId":"92","severity":1,"message":"95","line":142,"column":37,"nodeType":"94","endLine":151,"endColumn":39},{"ruleId":"92","severity":1,"message":"95","line":169,"column":37,"nodeType":"94","endLine":176,"endColumn":39},{"ruleId":"92","severity":1,"message":"97","line":195,"column":45,"nodeType":"94","endLine":199,"endColumn":47},{"ruleId":"92","severity":1,"message":"93","line":205,"column":37,"nodeType":"94","endLine":206,"endColumn":66},{"ruleId":"92","severity":1,"message":"96","line":215,"column":37,"nodeType":"94","endLine":218,"endColumn":39},{"ruleId":"88","replacedBy":"98"},{"ruleId":"90","replacedBy":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["100"],["101"],"no-global-assign","no-unsafe-negation"]